// Code generated by protoc-gen-go.
// source: sse.proto
// DO NOT EDIT!

package protos

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type IndexData_MessageType int32

const (
	IndexData_T_SET IndexData_MessageType = 0
	IndexData_X_SET IndexData_MessageType = 1
)

var IndexData_MessageType_name = map[int32]string{
	0: "T_SET",
	1: "X_SET",
}
var IndexData_MessageType_value = map[string]int32{
	"T_SET": 0,
	"X_SET": 1,
}

func (x IndexData_MessageType) Enum() *IndexData_MessageType {
	p := new(IndexData_MessageType)
	*p = x
	return p
}
func (x IndexData_MessageType) String() string {
	return proto.EnumName(IndexData_MessageType_name, int32(x))
}
func (x IndexData_MessageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *IndexData_MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IndexData_MessageType_value, data, "IndexData_MessageType")
	if err != nil {
		return err
	}
	*x = IndexData_MessageType(value)
	return nil
}

type BooleanSearchQuery_SearchType int32

const (
	BooleanSearchQuery_NEGATION    BooleanSearchQuery_SearchType = 0
	BooleanSearchQuery_SNF         BooleanSearchQuery_SearchType = 1
	BooleanSearchQuery_ARBITRARY   BooleanSearchQuery_SearchType = 2
	BooleanSearchQuery_DISJUNCTION BooleanSearchQuery_SearchType = 3
)

var BooleanSearchQuery_SearchType_name = map[int32]string{
	0: "NEGATION",
	1: "SNF",
	2: "ARBITRARY",
	3: "DISJUNCTION",
}
var BooleanSearchQuery_SearchType_value = map[string]int32{
	"NEGATION":    0,
	"SNF":         1,
	"ARBITRARY":   2,
	"DISJUNCTION": 3,
}

func (x BooleanSearchQuery_SearchType) Enum() *BooleanSearchQuery_SearchType {
	p := new(BooleanSearchQuery_SearchType)
	*p = x
	return p
}
func (x BooleanSearchQuery_SearchType) String() string {
	return proto.EnumName(BooleanSearchQuery_SearchType_name, int32(x))
}
func (x BooleanSearchQuery_SearchType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *BooleanSearchQuery_SearchType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BooleanSearchQuery_SearchType_value, data, "BooleanSearchQuery_SearchType")
	if err != nil {
		return err
	}
	*x = BooleanSearchQuery_SearchType(value)
	return nil
}

type IndexData struct {
	Type             *IndexData_MessageType `protobuf:"varint,1,opt,name=type,enum=protos.IndexData_MessageType" json:"type,omitempty"`
	TSet             *IndexData_TSet        `protobuf:"bytes,2,opt,name=t_set" json:"t_set,omitempty"`
	XSet             *IndexData_XSet        `protobuf:"bytes,3,opt,name=x_set" json:"x_set,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *IndexData) Reset()         { *m = IndexData{} }
func (m *IndexData) String() string { return proto.CompactTextString(m) }
func (*IndexData) ProtoMessage()    {}

func (m *IndexData) GetType() IndexData_MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return IndexData_T_SET
}

func (m *IndexData) GetTSet() *IndexData_TSet {
	if m != nil {
		return m.TSet
	}
	return nil
}

func (m *IndexData) GetXSet() *IndexData_XSet {
	if m != nil {
		return m.XSet
	}
	return nil
}

type IndexData_TSet struct {
	// (b || L) -> (B || s_i) XOR K
	// TODO(roasbeef): Need to decide on length split for these vals
	// Key is hex-encoded byte array
	TTuples          []*IndexData_TSet_TTuplesEntry `protobuf:"bytes,1,rep,name=t_tuples" json:"t_tuples,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IndexData_TSet) Reset()         { *m = IndexData_TSet{} }
func (m *IndexData_TSet) String() string { return proto.CompactTextString(m) }
func (*IndexData_TSet) ProtoMessage()    {}

func (m *IndexData_TSet) GetTTuples() []*IndexData_TSet_TTuplesEntry {
	if m != nil {
		return m.TTuples
	}
	return nil
}

type IndexData_TSet_TTuplesEntry struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IndexData_TSet_TTuplesEntry) Reset()         { *m = IndexData_TSet_TTuplesEntry{} }
func (m *IndexData_TSet_TTuplesEntry) String() string { return proto.CompactTextString(m) }
func (*IndexData_TSet_TTuplesEntry) ProtoMessage()    {}

func (m *IndexData_TSet_TTuplesEntry) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *IndexData_TSet_TTuplesEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// g^( F_p(K_x, w) * xind )
type IndexData_XSet struct {
	Xtag             []byte `protobuf:"bytes,1,opt,name=xtag" json:"xtag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IndexData_XSet) Reset()         { *m = IndexData_XSet{} }
func (m *IndexData_XSet) String() string { return proto.CompactTextString(m) }
func (*IndexData_XSet) ProtoMessage()    {}

func (m *IndexData_XSet) GetXtag() []byte {
	if m != nil {
		return m.Xtag
	}
	return nil
}

type IndexAck struct {
	Ack              *bool  `protobuf:"varint,1,opt,name=ack" json:"ack,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IndexAck) Reset()         { *m = IndexAck{} }
func (m *IndexAck) String() string { return proto.CompactTextString(m) }
func (*IndexAck) ProtoMessage()    {}

func (m *IndexAck) GetAck() bool {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return false
}

type Document struct {
	DocId            []byte `protobuf:"bytes,1,opt,name=doc_id" json:"doc_id,omitempty"`
	Document         []byte `protobuf:"bytes,2,opt,name=document" json:"document,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}

func (m *Document) GetDocId() []byte {
	if m != nil {
		return m.DocId
	}
	return nil
}

func (m *Document) GetDocument() []byte {
	if m != nil {
		return m.Document
	}
	return nil
}

type DocumentAck struct {
	Ack              *bool  `protobuf:"varint,1,opt,name=ack" json:"ack,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DocumentAck) Reset()         { *m = DocumentAck{} }
func (m *DocumentAck) String() string { return proto.CompactTextString(m) }
func (*DocumentAck) ProtoMessage()    {}

func (m *DocumentAck) GetAck() bool {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return false
}

// stag = F(K_t, w)
type KeywordQuery struct {
	Stag             []byte `protobuf:"bytes,1,opt,name=stag" json:"stag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *KeywordQuery) Reset()         { *m = KeywordQuery{} }
func (m *KeywordQuery) String() string { return proto.CompactTextString(m) }
func (*KeywordQuery) ProtoMessage()    {}

func (m *KeywordQuery) GetStag() []byte {
	if m != nil {
		return m.Stag
	}
	return nil
}

type BooleanSearchQuery struct {
	Type             *BooleanSearchQuery_SearchType           `protobuf:"varint,1,opt,name=type,enum=protos.BooleanSearchQuery_SearchType" json:"type,omitempty"`
	NQuery           *BooleanSearchQuery_NegatedConjunction   `protobuf:"bytes,2,opt,name=n_query" json:"n_query,omitempty"`
	SQuery           *BooleanSearchQuery_SearchableNormalForm `protobuf:"bytes,3,opt,name=s_query" json:"s_query,omitempty"`
	AQuery           *BooleanSearchQuery_ArbitraryBoolQuery   `protobuf:"bytes,4,opt,name=a_query" json:"a_query,omitempty"`
	DQuery           *BooleanSearchQuery_DisjunctionQuery     `protobuf:"bytes,5,opt,name=d_query" json:"d_query,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *BooleanSearchQuery) Reset()         { *m = BooleanSearchQuery{} }
func (m *BooleanSearchQuery) String() string { return proto.CompactTextString(m) }
func (*BooleanSearchQuery) ProtoMessage()    {}

func (m *BooleanSearchQuery) GetType() BooleanSearchQuery_SearchType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BooleanSearchQuery_NEGATION
}

func (m *BooleanSearchQuery) GetNQuery() *BooleanSearchQuery_NegatedConjunction {
	if m != nil {
		return m.NQuery
	}
	return nil
}

func (m *BooleanSearchQuery) GetSQuery() *BooleanSearchQuery_SearchableNormalForm {
	if m != nil {
		return m.SQuery
	}
	return nil
}

func (m *BooleanSearchQuery) GetAQuery() *BooleanSearchQuery_ArbitraryBoolQuery {
	if m != nil {
		return m.AQuery
	}
	return nil
}

func (m *BooleanSearchQuery) GetDQuery() *BooleanSearchQuery_DisjunctionQuery {
	if m != nil {
		return m.DQuery
	}
	return nil
}

type BooleanSearchQuery_NegatedConjunction struct {
	Stag             []byte  `protobuf:"bytes,1,opt,name=stag" json:"stag,omitempty"`
	BoolQuery        *string `protobuf:"bytes,2,opt,name=bool_query" json:"bool_query,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BooleanSearchQuery_NegatedConjunction) Reset()         { *m = BooleanSearchQuery_NegatedConjunction{} }
func (m *BooleanSearchQuery_NegatedConjunction) String() string { return proto.CompactTextString(m) }
func (*BooleanSearchQuery_NegatedConjunction) ProtoMessage()    {}

func (m *BooleanSearchQuery_NegatedConjunction) GetStag() []byte {
	if m != nil {
		return m.Stag
	}
	return nil
}

func (m *BooleanSearchQuery_NegatedConjunction) GetBoolQuery() string {
	if m != nil && m.BoolQuery != nil {
		return *m.BoolQuery
	}
	return ""
}

type BooleanSearchQuery_SearchableNormalForm struct {
	// stag ^ (xtag ^ ...)
	Stag             []byte  `protobuf:"bytes,1,opt,name=stag" json:"stag,omitempty"`
	BoolQuery        *string `protobuf:"bytes,2,opt,name=bool_query" json:"bool_query,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BooleanSearchQuery_SearchableNormalForm) Reset() {
	*m = BooleanSearchQuery_SearchableNormalForm{}
}
func (m *BooleanSearchQuery_SearchableNormalForm) String() string { return proto.CompactTextString(m) }
func (*BooleanSearchQuery_SearchableNormalForm) ProtoMessage()    {}

func (m *BooleanSearchQuery_SearchableNormalForm) GetStag() []byte {
	if m != nil {
		return m.Stag
	}
	return nil
}

func (m *BooleanSearchQuery_SearchableNormalForm) GetBoolQuery() string {
	if m != nil && m.BoolQuery != nil {
		return *m.BoolQuery
	}
	return ""
}

type BooleanSearchQuery_ArbitraryBoolQuery struct {
	// TRUE ^ (xtag AND xtag OR xtag)
	BoolQuery        *string `protobuf:"bytes,1,opt,name=bool_query" json:"bool_query,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BooleanSearchQuery_ArbitraryBoolQuery) Reset()         { *m = BooleanSearchQuery_ArbitraryBoolQuery{} }
func (m *BooleanSearchQuery_ArbitraryBoolQuery) String() string { return proto.CompactTextString(m) }
func (*BooleanSearchQuery_ArbitraryBoolQuery) ProtoMessage()    {}

func (m *BooleanSearchQuery_ArbitraryBoolQuery) GetBoolQuery() string {
	if m != nil && m.BoolQuery != nil {
		return *m.BoolQuery
	}
	return ""
}

type BooleanSearchQuery_DisjunctionQuery struct {
	BoolQuery        *string `protobuf:"bytes,1,opt,name=bool_query" json:"bool_query,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BooleanSearchQuery_DisjunctionQuery) Reset()         { *m = BooleanSearchQuery_DisjunctionQuery{} }
func (m *BooleanSearchQuery_DisjunctionQuery) String() string { return proto.CompactTextString(m) }
func (*BooleanSearchQuery_DisjunctionQuery) ProtoMessage()    {}

func (m *BooleanSearchQuery_DisjunctionQuery) GetBoolQuery() string {
	if m != nil && m.BoolQuery != nil {
		return *m.BoolQuery
	}
	return ""
}

type XTokenRequest struct {
	// TODO(roasbeef): add a search ID?
	Stag             []byte `protobuf:"bytes,1,opt,name=stag" json:"stag,omitempty"`
	DocIndex         *int32 `protobuf:"varint,2,opt,name=doc_index" json:"doc_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *XTokenRequest) Reset()         { *m = XTokenRequest{} }
func (m *XTokenRequest) String() string { return proto.CompactTextString(m) }
func (*XTokenRequest) ProtoMessage()    {}

func (m *XTokenRequest) GetStag() []byte {
	if m != nil {
		return m.Stag
	}
	return nil
}

func (m *XTokenRequest) GetDocIndex() int32 {
	if m != nil && m.DocIndex != nil {
		return *m.DocIndex
	}
	return 0
}

type XTokenResponse struct {
	Stag             []byte `protobuf:"bytes,1,opt,name=stag" json:"stag,omitempty"`
	DocIndex         *int32 `protobuf:"varint,2,opt,name=doc_index" json:"doc_index,omitempty"`
	Xtoken           []byte `protobuf:"bytes,3,opt,name=xtoken" json:"xtoken,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *XTokenResponse) Reset()         { *m = XTokenResponse{} }
func (m *XTokenResponse) String() string { return proto.CompactTextString(m) }
func (*XTokenResponse) ProtoMessage()    {}

func (m *XTokenResponse) GetStag() []byte {
	if m != nil {
		return m.Stag
	}
	return nil
}

func (m *XTokenResponse) GetDocIndex() int32 {
	if m != nil && m.DocIndex != nil {
		return *m.DocIndex
	}
	return 0
}

func (m *XTokenResponse) GetXtoken() []byte {
	if m != nil {
		return m.Xtoken
	}
	return nil
}

type Error struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("protos.IndexData_MessageType", IndexData_MessageType_name, IndexData_MessageType_value)
	proto.RegisterEnum("protos.BooleanSearchQuery_SearchType", BooleanSearchQuery_SearchType_name, BooleanSearchQuery_SearchType_value)
}
